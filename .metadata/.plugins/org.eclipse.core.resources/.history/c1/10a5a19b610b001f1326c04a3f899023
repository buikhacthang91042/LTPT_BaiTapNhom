package GUI;

import java.awt.Color;
import java.awt.Font;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import DAO.DAO_ChiTietDonDatHang;
import DAO.DAO_ChuyenDoi;
import DAO.DAO_DonHangDatTruoc;
import connect.ConnectDB;
import entity.ChiTietDonDatHang;
import entity.DonDatHang;

public class GUI_DatHangTruoc extends JPanel{
	private JTextField txtTimTheoMa;
	private DefaultTableModel modelDonDatHang,modelChiTietDonHang;
	private JTable tblDonDatHang;
	private JTable tblChiTietDonHang;
 GUI_DatHangTruoc() {
    	setBounds(new Rectangle(0, 0, 1308, 678));
    	setLayout(null);
        setBackground(new Color(0, 64, 64));
        
      //ConnectDB
 		try {
			ConnectDB.getInstance().connect();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
 		
	
		JLabel lblDatHangTruoc = new JLabel("Danh sách đơn hàng đặt trước");
		lblDatHangTruoc.setFont(new Font("Arial", Font.BOLD | Font.ITALIC, 35));
		lblDatHangTruoc.setBounds(460, 0, 550, 69);
		lblDatHangTruoc.setForeground(new Color(135, 206, 235));
		add(lblDatHangTruoc);
		
		
		//ConnectDB
 		try {
			ConnectDB.getInstance().connect();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		
		String [] tieude={"Mã đơn hàng","Ngày mua","Mã nhân viên","Mã khách hàng","Tổng tiền"};
 		modelDonDatHang = new DefaultTableModel(tieude,0);
 		JScrollPane scrHoaDon = new JScrollPane();
		scrHoaDon.setBounds(10, 67, 757, 465);
		add(scrHoaDon);
		scrHoaDon.setViewportView(tblDonDatHang = new  JTable(modelDonDatHang));
		scrHoaDon.setViewportView(tblDonDatHang);
		
		JButton btnXemChiTiet = new JButton("XEM CHI TIẾT");
		btnXemChiTiet.setBounds(787, 534, 159, 42);
		add(btnXemChiTiet);
		btnXemChiTiet.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				updateDataChiTiet();
			}
		});
		btnXemChiTiet.setForeground(new Color(0, 0, 0));
		btnXemChiTiet.setFont(new Font("Tahoma", Font.PLAIN, 15));
		btnXemChiTiet.setBackground(new Color(0, 250, 154));
		
		JLabel lblNewLabel = new JLabel("Tìm kiếm đơn hàng");
		lblNewLabel.setForeground(new Color(255, 0, 0));
		lblNewLabel.setFont(new Font("Arial", Font.BOLD | Font.ITALIC, 20));
		lblNewLabel.setBounds(10, 542, 190, 24);
		add(lblNewLabel);
		
		
		String [] tieude1={"Mã khách hàng","Mã quần áo","Tên quần áo","Số lượng","Giá bán","Thành tiền"};
		modelChiTietDonHang = new DefaultTableModel(tieude1,0);
		JScrollPane scrChiTietDatHang = new JScrollPane();
		scrChiTietDatHang.setViewportView(tblChiTietDonHang = new  JTable(modelChiTietDonHang));
		scrChiTietDatHang.setViewportView(tblChiTietDonHang);
		scrChiTietDatHang.setBounds(787, 67, 489, 465);
		add(scrChiTietDatHang);
		
		
		
		txtTimTheoMa = new JTextField();
		txtTimTheoMa.setFont(new Font("Arial", Font.PLAIN, 16));
		txtTimTheoMa.setBounds(210, 542, 120, 24);
		add(txtTimTheoMa);
		txtTimTheoMa.setColumns(10);
		
		JButton btnTim = new JButton("TÌM");
		btnTim.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				modelChiTietDonHang.setRowCount(0);
				timTheoMa();
				
			}
		});
		btnTim.setForeground(new Color(0, 0, 0));
		btnTim.setFont(new Font("Tahoma", Font.PLAIN, 15));
		btnTim.setBackground(new Color(0, 250, 154));
		add(btnTim);
		btnTim.setBounds(353, 543, 120, 24);
		updateData();
    }
    
 public void updateData() {
		DAO_DonHangDatTruoc dao = new DAO_DonHangDatTruoc();
		DAO_ChuyenDoi chuyenDoi = new DAO_ChuyenDoi();
		List<DonDatHang>list =dao.getAllDonDatHang();
		for(DonDatHang ddh : list) {
			Object [] data = {ddh.getMaDonHang(),ddh.getNgayMua(),ddh.getNV().getMaNV(),ddh.getKH().getMaKH(),chuyenDoi.DinhDangTien(ddh.getTongTien())};
			modelDonDatHang.addRow(data);
	}
 }
 public void updateDataChiTiet() {
		DAO_ChiTietDonDatHang dao = new DAO_ChiTietDonDatHang();
		DAO_ChuyenDoi chuyenDoi = new DAO_ChuyenDoi();
		int row = tblChiTietDonHang.getSelectedRow();
		List<ChiTietDonDatHang> list = dao.getAllChiTietDonDatHang(tblChiTietDonHang.getValueAt(row, 1).toString());
		for(ChiTietDonDatHang ctddh : list) {
			Object [] data = {ctddh.getMaDatHang() ,ctddh.getQuanAo().getMaQuanAo(),ctddh.getQuanAo().getTenQuanAo(),ctddh.getSoLuong(),chuyenDoi.DinhDangTien(ctddh.getGiaBan()),chuyenDoi.DinhDangTien(ctddh.getThanhTien())};
			modelChiTietDonHang.addRow(data);
	}
	}
	public void timTheoMa() {
		DAO_DonHangDatTruoc dao = new DAO_DonHangDatTruoc();
		DAO_ChuyenDoi chuyenDoi = new DAO_ChuyenDoi();
		List<DonDatHang> list = dao.search(txtTimTheoMa.getText());
		modelDonDatHang.setRowCount(0);
		for (DonDatHang ddh : list) {
			Object [] data = {ddh.getMaDonHang(),ddh.getNgayMua(),ddh.getNV().getMaNV(),ddh.getKH().getMaKH(),chuyenDoi.DinhDangTien(ddh.getTongTien())};
			modelDonDatHang.addRow(data);
		}
	}
}
