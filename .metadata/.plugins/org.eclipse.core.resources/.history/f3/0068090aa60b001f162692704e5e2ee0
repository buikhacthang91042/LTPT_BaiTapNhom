package DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;


import connect.ConnectDB;
import entity.LoaiQuanAo;
import entity.NhaCungCap;
import jakarta.persistence.EntityManager;
import jakarta.persistence.Query;

public class DAO_LoaiQuanAo {
	private EntityManager entityManager;
	public DAO_LoaiQuanAo(EntityManager entityManager) {
		this.entityManager = entityManager;
	}
	List<LoaiQuanAo> loaiQuanAo = new ArrayList<>();
	 public List<LoaiQuanAo> getAllLoaiQuanAo() {
	        Query query = entityManager.createQuery("SELECT l FROM LoaiQuanAo l");
	        return query.getResultList();
	    }

	
	 public boolean create(LoaiQuanAo loaiQuanAo) {
	        try {
	            entityManager.getTransaction().begin();
	            entityManager.persist(loaiQuanAo);
	            entityManager.getTransaction().commit();
	            return true;
	        } catch (Exception e) {
	            e.printStackTrace();
	            return false;
	        }
	    }
	
	 public boolean delete(String maLoaiQuanAo) {
	        LoaiQuanAo loaiQuanAo = entityManager.find(LoaiQuanAo.class, maLoaiQuanAo);
	        if (loaiQuanAo != null) {
	            try {
	                entityManager.getTransaction().begin();
	                entityManager.remove(loaiQuanAo);
	                entityManager.getTransaction().commit();
	                return true;
	            } catch (Exception e) {
	                e.printStackTrace();
	                return false;
	            }
	        }
	        return false;
	    }
	
	 public boolean suaLoaiQuanAo(LoaiQuanAo loaiMoi) {
	        try {
	            entityManager.getTransaction().begin();
	            entityManager.merge(loaiMoi);
	            entityManager.getTransaction().commit();
	            return true;
	        } catch (Exception e) {
	            e.printStackTrace();
	            return false;
	        }
	    }

	public ArrayList<LoaiQuanAo> timTheoTen(String tenLoai) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from LoaiQuanAo where TenLoai like ?";
			stmt= con.prepareStatement(sql);
			stmt.setString(1,"%"+tenLoai+"%");
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String ma= rs.getString(1);
				String ten = rs.getString(2);
				loaiQuanAo.add(new LoaiQuanAo(ma, ten));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<LoaiQuanAo>) loaiQuanAo;
	}
	
	public ArrayList<LoaiQuanAo> timTheoTenVa(String tenLoai) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from LoaiQuanAo where TenLoai like ?";
			stmt= con.prepareStatement(sql);
			stmt.setString(1,"%"+tenLoai+"%");
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String ma= rs.getString(1);
				String ten = rs.getString(2);
				loaiQuanAo.add(new LoaiQuanAo(ma, ten));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<LoaiQuanAo>) loaiQuanAo;
	}
	public LoaiQuanAo getLoaiQuanAoByTen(String ten) {
        Query query = entityManager.createQuery("SELECT l FROM LoaiQuanAo l WHERE l.tenLoai = :ten");
        query.setParameter("ten", ten);
        List<LoaiQuanAo> resultList = query.getResultList();
        if (!resultList.isEmpty()) {
            return resultList.get(0);
        }
        return null;
    }
	public LoaiQuanAo getLoaiQuanAoByMa(String ma) {
        return entityManager.find(LoaiQuanAo.class, ma);
    }

	public boolean updateAllMaLoaiQuanAo(int deletedRowCount, String maLoaiQADaXoa) {
		Connection con = ConnectDB.getInstance().getConnection();
		String query = "SELECT MaLoai FROM LoaiQuanAo WHERE MaLoai > ?";
		List<String> maQAList = new ArrayList<>();

		try {
			PreparedStatement stmt = null;
			stmt= con.prepareStatement(query);
		    stmt.setString(1, maLoaiQADaXoa);
		    ResultSet rs = stmt.executeQuery();

		    while (rs.next()) {
		    	maQAList.add(rs.getString("MaLoai"));
		    }
		} catch (SQLException e) {
		    e.printStackTrace();
		    return false;
		}

	    for (String MaLoaiCu : maQAList) {
	        int maCu = Integer.parseInt(MaLoaiCu.substring(3));
	        int maMoi = maCu - deletedRowCount;
	        String newMaNCC = "ML" + String.format("%03d", maMoi);

	        String updateQuery = "UPDATE LoaiQuanAo SET MaLoai = ? WHERE MaLoai = ?";
	        try (PreparedStatement updateStatement = ConnectDB.getInstance().getConnection().prepareStatement(updateQuery)) {
	            updateStatement.setString(1, newMaNCC);
	            updateStatement.setString(2, MaLoaiCu);
	            updateStatement.executeUpdate();
	        } catch (SQLException e) {
	            e.printStackTrace();
	            return false;
	        }
	    }

	    return true;
	}
}
