package DAO;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import connect.ConnectDB;
import entity.KhachHang;
import entity.KhuyenMai;
import entity.LoaiQuanAo;
import entity.NhaCungCap;
import entity.QuanAo;
import jakarta.persistence.EntityManager;
import jakarta.persistence.TypedQuery;

public class DAO_NhaCungCap {
	private EntityManager entityManager;
	public DAO_NhaCungCap(EntityManager entityManager) {
		this.entityManager = entityManager;
	}
	List<NhaCungCap> nhaCungCap = new ArrayList<>();
	public List<NhaCungCap> getAllNhaCungCap() {
        TypedQuery<NhaCungCap> query = entityManager.createQuery("SELECT n FROM NhaCungCap n", NhaCungCap.class);
        return query.getResultList();
    }
	
	public boolean create(NhaCungCap nhaCungCap) {
        try {
            entityManager.getTransaction().begin();
            entityManager.persist(nhaCungCap);
            entityManager.getTransaction().commit();
            return true;
        } catch (Exception ex) {
            ex.printStackTrace();
            return false;
        }
    }
	
	public boolean delete(String maNCC) {
        try {
            NhaCungCap ncc = entityManager.find(NhaCungCap.class, maNCC);
            if (ncc != null) {
                entityManager.getTransaction().begin();
                entityManager.remove(ncc);
                entityManager.getTransaction().commit();
                return true;
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return false;
    }
	
	public boolean update(NhaCungCap nCC) {
        try {
            entityManager.getTransaction().begin();
            entityManager.merge(nCC);
            entityManager.getTransaction().commit();
            return true;
        } catch (Exception ex) {
            ex.printStackTrace();
            return false;
        }
    }

	 public List<NhaCungCap> timTheoMa(String maNCC) {
	        Query query = entityManager.createQuery("SELECT n FROM NhaCungCap n WHERE n.maNCC = :maNCC");
	        query.setParameter("maNCC", maNCC);
	        return query.getResultList();
	    }

	    public List<NhaCungCap> timTheoSoDienThoai(String sdt) {
	        Query query = entityManager.createQuery("SELECT n FROM NhaCungCap n WHERE n.soDienThoai LIKE :sdt");
	        query.setParameter("sdt", "%" + sdt + "%");
	        return query.getResultList();
	    }

	    public List<NhaCungCap> timTheoTen(String ten) {
	        Query query = entityManager.createQuery("SELECT n FROM NhaCungCap n WHERE n.tenNCC LIKE :ten");
	        query.setParameter("ten", "%" + ten + "%");
	        return query.getResultList();
	    }

	    public List<NhaCungCap> timTheoDiaChi(String diaChi) {
	        Query query = entityManager.createQuery("SELECT n FROM NhaCungCap n WHERE n.diaChi LIKE :diaChi");
	        query.setParameter("diaChi", "%" + diaChi + "%");
	        return query.getResultList();
	    }
	
	public ArrayList<NhaCungCap> timTheoTenvaDiaChi(String ten, String diaChi) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from NhaCungCap where TenNCC like ? and DiaChi like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,"%"+ten);
			stmt.setNString(2,"%"+diaChi+"%");
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String ma= rs.getString(1);
				String tenNCC = rs.getString(2);
				String diaChiNCC= rs.getString(3);
				String soDienThoai = rs.getString(4);
				nhaCungCap.add(new NhaCungCap(ma, tenNCC,diaChiNCC, soDienThoai));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<NhaCungCap>) nhaCungCap;
	}
	
	public ArrayList<NhaCungCap> timTheoTenvaMa(String ten, String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from NhaCungCap where TenNCC like ? and MaNCC like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,"%"+ten);
			stmt.setNString(2,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maNCC= rs.getString(1);
				String tenNCC = rs.getString(2);
				String diaChiNCC= rs.getString(3);
				String soDienThoai = rs.getString(4);
				nhaCungCap.add(new NhaCungCap(maNCC, tenNCC,diaChiNCC, soDienThoai));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<NhaCungCap>) nhaCungCap;
	}
	
	public ArrayList<NhaCungCap> timTheoTenvaSDT(String ten, String sdt) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from NhaCungCap where TenNCC like ? and SoDienThoai like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,"%"+ten);
			stmt.setNString(2,sdt);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String ma= rs.getString(1);
				String tenNCC = rs.getString(2);
				String diaChiNCC= rs.getString(3);
				String soDienThoai = rs.getString(4);
				nhaCungCap.add(new NhaCungCap(ma, tenNCC,diaChiNCC, soDienThoai));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<NhaCungCap>) nhaCungCap;
	}
	
	public ArrayList<NhaCungCap> timTheoDiaChivaMa(String diaChi, String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from NhaCungCap where DiaChi like ? and MaNCC like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,"%"+diaChi+"%");
			stmt.setNString(2,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maNCC= rs.getString(1);
				String tenNCC = rs.getString(2);
				String diaChiNCC= rs.getString(3);
				String soDienThoai = rs.getString(4);
				nhaCungCap.add(new NhaCungCap(maNCC, tenNCC,diaChiNCC, soDienThoai));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<NhaCungCap>) nhaCungCap;
	}
	public ArrayList<NhaCungCap> timTheoSDTvaMa(String sdt, String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from NhaCungCap where SoDienThoai like ? and MaNCC like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,"%"+sdt);
			stmt.setNString(2,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maNCC= rs.getString(1);
				String tenNCC = rs.getString(2);
				String diaChiNCC= rs.getString(3);
				String soDienThoai = rs.getString(4);
				nhaCungCap.add(new NhaCungCap(maNCC, tenNCC,diaChiNCC, soDienThoai));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<NhaCungCap>) nhaCungCap;
	}
	
	public ArrayList<NhaCungCap> timTheoSDTvaDiaChi(String sdt, String diaChi) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from NhaCungCap where SoDienThoai like ? and DiaChi like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,"%"+sdt);
			stmt.setNString(2,"%"+diaChi+"%");
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String ma= rs.getString(1);
				String tenNCC = rs.getString(2);
				String diaChiNCC= rs.getString(3);
				String soDienThoai = rs.getString(4);
				nhaCungCap.add(new NhaCungCap(ma, tenNCC,diaChiNCC, soDienThoai));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<NhaCungCap>) nhaCungCap;
	}
	
	public ArrayList<NhaCungCap> timTheoTenvaDiaChivaMa(String ten,String diaChi,String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from NhaCungCap where TenNCC like ? and DiaChi like ? and MaNCC like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,ten);
			stmt.setNString(2,"%"+diaChi+"%");
			stmt.setNString(3,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maNCC= rs.getString(1);
				String tenNCC = rs.getString(2);
				String diaChiNCC= rs.getString(3);
				String soDienThoai = rs.getString(4);
				nhaCungCap.add(new NhaCungCap(maNCC, tenNCC,diaChiNCC, soDienThoai));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<NhaCungCap>) nhaCungCap;
	}
	
	public ArrayList<NhaCungCap> timTheoTenvaSDTvaMa(String ten,String sdt,String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from NhaCungCap where TenNCC like ? and SoDienThoai like ? and MaNCC like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,ten);
			stmt.setNString(2,sdt);
			stmt.setNString(3,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maNCC= rs.getString(1);
				String tenNCC = rs.getString(2);
				String diaChiNCC= rs.getString(3);
				String soDienThoai = rs.getString(4);
				nhaCungCap.add(new NhaCungCap(maNCC, tenNCC,diaChiNCC, soDienThoai));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<NhaCungCap>) nhaCungCap;
	}
	
	public ArrayList<NhaCungCap> timTheoSDTvaMavaDiaChi(String sdt,String ma,String diaChi) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from NhaCungCap where SoDienThoai like ? and MaNCC like ? and DiaChi like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,sdt);
			stmt.setNString(2,ma);
			stmt.setNString(3,"%"+diaChi+"%");
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maNCC= rs.getString(1);
				String tenNCC = rs.getString(2);
				String diaChiNCC= rs.getString(3);
				String soDienThoai = rs.getString(4);
				nhaCungCap.add(new NhaCungCap(maNCC, tenNCC,diaChiNCC, soDienThoai));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<NhaCungCap>) nhaCungCap;
	}
	public ArrayList<NhaCungCap> timTheoTenvaDiaChivaMavaSDT(String ten,String diaChi,String ma,String sdt) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from NhaCungCap where TenNCC like ? and DiaChi like ? and MaNCC like ? and SoDienThoai like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,ten);
			stmt.setNString(2,"%"+diaChi+"%");
			stmt.setNString(3,ma);
			stmt.setNString(4, sdt);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maNCC= rs.getString(1);
				String tenNCC = rs.getString(2);
				String diaChiNCC= rs.getString(3);
				String soDienThoai = rs.getString(4);
				nhaCungCap.add(new NhaCungCap(maNCC, tenNCC,diaChiNCC, soDienThoai));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<NhaCungCap>) nhaCungCap;
	}
	public boolean updateAllMaNCC(int deletedRowCount, String maNCCDaXoa) {
		Connection con = ConnectDB.getInstance().getConnection();
		String query = "SELECT MaNCC FROM NhaCungCap WHERE MaNCC >= ?";
		List<String> maNCCList = new ArrayList<>();

		try {
			PreparedStatement stmt = null;
			stmt= con.prepareStatement(query);
		    stmt.setString(1, maNCCDaXoa);
		    ResultSet rs = stmt.executeQuery();

		    while (rs.next()) {
		        maNCCList.add(rs.getString("MaNCC"));
		    }
		} catch (SQLException e) {
		    e.printStackTrace();
		    return false;
		}

	    for (String MaNCCCu : maNCCList) {
	        int maCu = Integer.parseInt(MaNCCCu.substring(3));
	        int maMoi = maCu - deletedRowCount;
	        String newMaNCC = "NCC" + String.format("%03d", maMoi);

	        String updateQuery = "UPDATE NhaCungCap SET MaNCC = ? WHERE MaNCC = ?";
	        try (PreparedStatement updateStatement = ConnectDB.getInstance().getConnection().prepareStatement(updateQuery)) {
	            updateStatement.setString(1, newMaNCC);
	            updateStatement.setString(2, MaNCCCu);
	            updateStatement.executeUpdate();
	        } catch (SQLException e) {
	            e.printStackTrace();
	            return false;
	        }
	    }

	    return true;
	}
	public NhaCungCap getNCCByTen(String ten) {
        TypedQuery<NhaCungCap> query = entityManager.createQuery("SELECT n FROM NhaCungCap n WHERE n.tenNCC = :ten", NhaCungCap.class);
        query.setParameter("ten", ten);
        return query.getSingleResult();
    }

	 public NhaCungCap getNCCByMa(String ma) {
	        return entityManager.find(NhaCungCap.class, ma);
	    }
	}

