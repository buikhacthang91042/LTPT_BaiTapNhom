package DAO;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import connect.ConnectDB;
import entity.QuanAo;
import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityTransaction;
import jakarta.persistence.Query;
import entity.NhaCungCap;
import entity.KhuyenMai;
import entity.LoaiQuanAo;
public class DAO_QuanAo {
	private EntityManager entityManager;
	public DAO_QuanAo(EntityManager entityManager) {
		this.entityManager = entityManager;
	}
	List<QuanAo> dsQuanAo = new ArrayList<>();
	public List<QuanAo> getAllQuanAo() {
        return entityManager.createQuery("SELECT qa FROM QuanAo qa", QuanAo.class).getResultList();
    }
	 public List<QuanAo> getAllQuanAoByMaKM(String maKM) {
	        Query query = entityManager.createQuery("SELECT qa FROM QuanAo qa WHERE qa.km.maKM = :maKM", QuanAo.class);
	        query.setParameter("maKM", maKM);
	        return query.getResultList();
	    }

	 public boolean create(QuanAo quanAo) {
	        EntityTransaction transaction = entityManager.getTransaction();
	        try {
	            transaction.begin();
	            entityManager.persist(quanAo);
	            transaction.commit();
	            return true;
	        } catch (Exception ex) {
	            if (transaction.isActive()) {
	                transaction.rollback();
	            }
	            ex.printStackTrace();
	            return false;
	        }
	    }
	
	 public boolean delete(String MaQuanAo) {
	        QuanAo quanAo = entityManager.find(QuanAo.class, MaQuanAo);
	        if (quanAo != null) {
	            entityManager.remove(quanAo);
	            return true;
	        }
	        return false;
	    }
	
	 public boolean update(QuanAo quanAo) {
	        EntityTransaction transaction = entityManager.getTransaction();
	        try {
	            transaction.begin();
	            entityManager.merge(quanAo);
	            transaction.commit();
	            return true;
	        } catch (Exception ex) {
	            if (transaction.isActive()) {
	                transaction.rollback();
	            }
	            ex.printStackTrace();
	            return false;
	        }
	    }

	 public List<QuanAo> timTheoTen(String ten) {
	        Query query = entityManager.createQuery("SELECT qa FROM QuanAo qa WHERE qa.tenQuanAo LIKE :ten", QuanAo.class);
	        query.setParameter("ten", "%" + ten + "%");
	        return query.getResultList();
	    }
	public ArrayList<QuanAo> timTheoHang(String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where NCC like ?";
			stmt= con.prepareStatement(sql);
			stmt.setString(1,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String NhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				dsQuanAo.add(new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(NhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<QuanAo>) dsQuanAo;
	}
	
	public ArrayList<QuanAo> timTheoLoai(String loai) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where LoaiQuanAo like ?";
			stmt= con.prepareStatement(sql);
			stmt.setString(1,"%"+loai);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String NhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				dsQuanAo.add(new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(NhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<QuanAo>) dsQuanAo;
	}
	
	public ArrayList<QuanAo> timTheoMa(String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where MaQuanAo like ?";
			stmt= con.prepareStatement(sql);
			stmt.setString(1,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String tenNhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				dsQuanAo.add(new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(tenNhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<QuanAo>) dsQuanAo;
	}
	
	public ArrayList<QuanAo> timTheoTenvaHang(String ten, String hang) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where TenQuanAo like ? and NCC like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,"%"+ten);
			stmt.setNString(2,hang);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String NhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				dsQuanAo.add(new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(NhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<QuanAo>) dsQuanAo;
	}
	
	public ArrayList<QuanAo> timTheoTenvaLoai(String ten, String loai) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where TenQuanAo like ? and LoaiQuanAo like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,"%"+ten);
			stmt.setNString(2,loai);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String NhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				dsQuanAo.add(new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(NhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<QuanAo>) dsQuanAo;
	}
	
	public ArrayList<QuanAo> timTheoTenvaMa(String ten, String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where TenQuanAo like ? and MaQuanAo like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,"%"+ten);
			stmt.setNString(2,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String tenNhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				dsQuanAo.add(new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(tenNhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<QuanAo>) dsQuanAo;
	}
	
	public ArrayList<QuanAo> timTheoHangvaLoai(String hang, String loai) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where NCC like ? and LoaiQuanAo like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,hang);
			stmt.setNString(2,loai);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String NhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				dsQuanAo.add(new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(NhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<QuanAo>) dsQuanAo;
	}
	
	public ArrayList<QuanAo> timTheoHangvaMa(String hang, String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where NCC like ? and MaQuanAo like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,hang);
			stmt.setNString(2,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String NhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				dsQuanAo.add(new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(NhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<QuanAo>) dsQuanAo;
	}
	
	public ArrayList<QuanAo> timTheoLoaivaMa(String loai, String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where LoaiQuanAo like ? and MaQuanAo like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,loai);
			stmt.setNString(2,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String NhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				dsQuanAo.add(new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(NhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<QuanAo>) dsQuanAo;
	}
	
	public ArrayList<QuanAo> timTheoTenvaHangvaLoai(String ten,String hang,String loai) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where TenQuanAo like ? and NCC like ? and LoaiQuanAo like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,ten);
			stmt.setNString(2,hang);
			stmt.setNString(3,loai);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String NhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				dsQuanAo.add(new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(NhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<QuanAo>) dsQuanAo;
	}
	
	public ArrayList<QuanAo> timTheoTenvaHangvaMa(String ten,String hang,String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where TenQuanAo like ? and NCC like ? and MaQuanAo like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,ten);
			stmt.setNString(2,hang);
			stmt.setNString(3,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String NhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				dsQuanAo.add(new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(NhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<QuanAo>) dsQuanAo;
	}
	
	public ArrayList<QuanAo> timTheoLoaivaHangvaMa(String loai,String hang,String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where LoaiQuanAo like ? and NCC like ? and MaQuanAo like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,loai);
			stmt.setNString(2,hang);
			stmt.setNString(3,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String NhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				dsQuanAo.add(new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(NhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<QuanAo>) dsQuanAo;
	}
	
	public ArrayList<QuanAo> timTheoTenvaLoaivaHangvaMa(String ten,String loai,String hang,String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where TenQuanAo like ? and LoaiQuanAo like ? and NCC like ? and MaQuanAo like ?";
			stmt= con.prepareStatement(sql);
			stmt.setNString(1,ten);
			stmt.setNString(2,loai);
			stmt.setNString(3,hang);
			stmt.setNString(4,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String NhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				dsQuanAo.add(new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(NhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan));
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return (ArrayList<QuanAo>) dsQuanAo;
	}
	
	public boolean updateSoLuongCon(  int soLuong,String tenQuanAo) {
		Connection con = ConnectDB.getInstance().getConnection();
		PreparedStatement stmt2= null;
		int n = 0;
		
			try {
				stmt2 = con.prepareStatement("update QuanAo set SoLuongHienTai=? where TenQuanAo=?");
				stmt2.setInt(1,soLuong);
				stmt2.setString(2,tenQuanAo);
				n = stmt2.executeUpdate();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		return n>0;
	}
	public QuanAo getQuanAoByMa(String ma) {
		Connection con = ConnectDB.getInstance().getConnection();
		QuanAo quanAo = null;
		PreparedStatement stmt = null;
		
		try {
			String sql = "select * from QuanAo where MaQuanAo like ?";
			stmt= con.prepareStatement(sql);
			stmt.setString(1,ma);
			ResultSet rs = stmt.executeQuery();
			while(rs.next()) {
				String maQuanAo= rs.getString(1);
				String tenQuanAo= rs.getString(2);
				String NhaCC = rs.getString(3);
				String loaiQuanAo = rs.getString(4);
				String kichThuoc = rs.getString(5);
				int soLuongCu = rs.getInt(6);
				int soLuongHienTai = rs.getInt(7);
				Date ngayNhap = rs.getDate(8);
				String km= rs.getString(9);
				float gia = rs.getFloat(10);
				String duongDan = rs.getString(11);
				quanAo = new QuanAo(maQuanAo,tenQuanAo,new NhaCungCap(NhaCC),new LoaiQuanAo(loaiQuanAo),kichThuoc,soLuongCu,soLuongHienTai,ngayNhap,new KhuyenMai(km),gia,duongDan);
			}
		} catch (SQLException e) {
			// TODO: handle exception
		}
	return quanAo;
	}
	 public boolean updateMaKM(String maQuanAo, String maKM) {
	        Connection con = ConnectDB.getInstance().getConnection();
	        PreparedStatement stmt = null;

	        try {
	            stmt = con.prepareStatement("UPDATE QuanAo SET MaKM = ? WHERE MaQuanAo = ?");
	            stmt.setString(1, maKM);
	            stmt.setString(2, maQuanAo);

	            int n = stmt.executeUpdate();
	            return n > 0;
	        } catch (SQLException e) {
	            e.printStackTrace();
	            return false;
	        } finally {
	            // Đóng tài nguyên
	            try {
	                if (stmt != null) {
	                    stmt.close();
	                }
	            } catch (SQLException e) {
	                e.printStackTrace();
	            }
	        }
	    }
		public boolean updateAllMaQuanAo(int deletedRowCount, String maQADaXoa) {
			Connection con = ConnectDB.getInstance().getConnection();
			String query = "SELECT MaQuanAo FROM QuanAo WHERE MaQuanAo > ?";
			List<String> maQAList = new ArrayList<>();

			try {
				PreparedStatement stmt = null;
				stmt= con.prepareStatement(query);
			    stmt.setString(1, maQADaXoa);
			    ResultSet rs = stmt.executeQuery();

			    while (rs.next()) {
			    	maQAList.add(rs.getString("MaQuanAo"));
			    }
			} catch (SQLException e) {
			    e.printStackTrace();
			    return false;
			}

		    for (String MaQACu : maQAList) {
		        int maCu = Integer.parseInt(MaQACu.substring(3));
		        int maMoi = maCu - deletedRowCount;
		        String newMaNCC = "QA" + String.format("%03d", maMoi);

		        String updateQuery = "UPDATE QuanAo SET MaQuanAo = ? WHERE MaQuanAo = ?";
		        try (PreparedStatement updateStatement = ConnectDB.getInstance().getConnection().prepareStatement(updateQuery)) {
		            updateStatement.setString(1, newMaNCC);
		            updateStatement.setString(2, MaQACu);
		            updateStatement.executeUpdate();
		        } catch (SQLException e) {
		            e.printStackTrace();
		            return false;
		        }
		    }

		    return true;
		}
	}

